FROM node:20-bullseye-slim

# Fix GPG and install base dependencies first
RUN apt-get update --allow-releaseinfo-change && \
    apt-get install -y \
    wget \
    gnupg \
    ca-certificates \
    apt-transport-https \
    --no-install-recommends && \
    rm -rf /var/lib/apt/lists/*

# Add Google Chrome repository with better error handling
RUN wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | \
    gpg --dearmor -o /usr/share/keyrings/googlechrome-linux-keyring.gpg && \
    echo "deb [arch=amd64 signed-by=/usr/share/keyrings/googlechrome-linux-keyring.gpg] http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google.list

# Install Chrome and all required dependencies for enhanced stealth mode
RUN apt-get update --allow-releaseinfo-change && \
    apt-get install -y \
    google-chrome-stable \
    xvfb \
    fonts-liberation \
    fonts-dejavu-core \
    fonts-noto-cjk \
    fonts-noto-color-emoji \
    fontconfig \
    gconf-service \
    libasound2 \
    libasound2-plugins \
    libatk1.0-0 \
    libatk-bridge2.0-0 \
    libc6 \
    libcairo2 \
    libcups2 \
    libdbus-1-3 \
    libdrm2 \
    libexpat1 \
    libfontconfig1 \
    libgcc1 \
    libgconf-2-4 \
    libgdk-pixbuf2.0-0 \
    libglib2.0-0 \
    libgtk-3-0 \
    libnspr4 \
    libnss3 \
    libpango-1.0-0 \
    libpangocairo-1.0-0 \
    libstdc++6 \
    libx11-6 \
    libx11-xcb1 \
    libxcb1 \
    libxcomposite1 \
    libxcursor1 \
    libxdamage1 \
    libxext6 \
    libxfixes3 \
    libxi6 \
    libxrandr2 \
    libxrender1 \
    libxss1 \
    libxtst6 \
    ca-certificates \
    fonts-liberation \
    libappindicator1 \
    libappindicator3-1 \
    libnss3 \
    lsb-release \
    xdg-utils \
    wget \
    procps \
    dbus \
    dbus-x11 \
    pulseaudio \
    alsa-utils \
    --no-install-recommends && \
    rm -rf /var/lib/apt/lists/*

# Add machine ID for Chrome (prevents errors)
RUN echo "$(openssl rand -hex 16)" > /etc/machine-id

# Set working directory
WORKDIR /app

# Copy package files
COPY package.json package-lock.json ./

# Install Node.js dependencies
RUN npm install

# Copy application code
COPY . .

# Make start script executable
RUN chmod +x /app/start.server.sh

# Generate Prisma client
RUN npx prisma generate

# Create non-root user with expanded permissions for Chrome
RUN groupadd -r appuser && useradd -r -g appuser -G audio,video appuser && \
    mkdir -p /home/appuser/Downloads \
               /home/appuser/.cache \
               /home/appuser/.config \
               /tmp/chrome-user-data \
               /tmp/chrome-data \
               /tmp/.chromium \
               /tmp/chrome-crashpad \
               /dev/shm && \
    chown -R appuser:appuser /home/appuser && \
    chown -R appuser:appuser /app && \
    chown -R appuser:appuser /tmp/chrome-user-data && \
    chown -R appuser:appuser /tmp/chrome-data && \
    chown -R appuser:appuser /tmp/.chromium && \
    chown -R appuser:appuser /tmp/chrome-crashpad && \
    chmod 755 /tmp/chrome-user-data /tmp/chrome-data /tmp/.chromium /tmp/chrome-crashpad

# Switch to non-root user
USER appuser

# Set environment variables for Chrome in server environment
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
ENV PUPPETEER_EXECUTABLE_PATH=/usr/bin/google-chrome-stable
ENV CHROME_BIN=/usr/bin/google-chrome-stable
ENV DISPLAY=:99
ENV XDG_CONFIG_HOME=/home/appuser/.config
ENV XDG_CACHE_HOME=/home/appuser/.cache
ENV HOME=/home/appuser
ENV DBUS_SESSION_BUS_ADDRESS=/dev/null
ENV NODE_ENV=production
ENV TZ=America/New_York
ENV LANG=en_US.UTF-8
ENV LC_ALL=en_US.UTF-8
ENV PULSE_SERVER=unix:/run/user/1000/pulse/native

# Expose Chrome debugging port for puppeteer-real-browser
EXPOSE 9222
# Expose port (optional, adjust as needed)
EXPOSE 3000

# Default command - run server startup script
CMD ["/app/start.server.sh"]